<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[1 Python常用功能函数]]></title>
    <url>%2F2018%2F04%2F19%2FPython%2F1-Python%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[open()1简单的文件读写 123456789f = open("123.txt", "r");content = f.read();print(content);f.close();f = open("123.txt", "a+");f.write("\n");f.write("222222222222");f.close(); 2读取数据到矩阵 123456789101112#读取txt二维数据到矩阵def loadDataSet(fileName): dataMat = np.mat([0,0]) f = open(fileName) for line in f.readlines(): curLine = line.strip().split('\t') if len(curLine)==1 : continue curLineMat = np.mat(curLine) dataMat = np.vstack((dataMat, curLineMat)) #拼接矩阵 dataMat = dataMat[1:,:].astype(float) #不要第一行；转为纯数字 return dataMat set()将一个字符串拆成 单个字符 组成的字符集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等。 1234567&gt;&gt;&gt; x = set('runoob') &gt;&gt;&gt; y = set('google') &gt;&gt;&gt; x, y (set(['b', 'r', 'u', 'o', 'n']), set(['e', 'o', 'g', 'l'])) # 重复的被删除 &gt;&gt;&gt; x &amp; y # 交集 set(['o']) &gt;&gt;&gt; x | y # 并集 set(['b', 'e', 'g', 'l', 'o', 'n', 'r', 'u']) &gt;&gt;&gt; x - y # 差集 set(['r', 'b', 'u', 'n']) &gt;&gt;&gt; copy() = 赋值 传引用 =》内存不独立 =》 同步跟随变化 copy 浅拷贝 只拷贝父对象 =》父对象内存独立 =》只有子对象跟随变化 deepcopy 深拷贝 拷贝对象及其子对象 =》全部内存独立 =》 不跟随变化（深拷贝 和 浅拷贝——只对数组结构有用，int之类的没用）123456789101112131415161718a = [1, 2, 3, 4, ['a', 'b']] #原始对象 b = a #赋值，传对象的引用c = copy.copy(a) #对象拷贝，浅拷贝d = copy.deepcopy(a) #对象拷贝，深拷贝 a.append(5) #修改对象aa[4].append('c') #修改对象a中的['a', 'b']数组对象 print 'a = ', aprint 'b = ', bprint 'c = ', cprint 'd = ', d输出结果：a = [1, 2, 3, 4, ['a', 'b', 'c'], 5]b = [1, 2, 3, 4, ['a', 'b', 'c'], 5]c = [1, 2, 3, 4, ['a', 'b', 'c']]d = [1, 2, 3, 4, ['a', 'b']] zip()zip函数接受任意多个序列作为参数，返回一个tuple列表123456789101112print(zip(range(3),range(5)))[(0, 0), (1, 1), (2, 2)]for i,j in zip(range(3),range(5)): print(i) print(j)001122]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Next主题优化]]></title>
    <url>%2F2018%2F04%2F16%2FHexo%2F%E4%BD%BF%E7%94%A8Hexo%20next%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[一、界面 篇1 添加动态背景修改配置文件在主题配置文件中找到canvas_nest: false，把它改为canvas_nest: true 修改_layout.swig打开 next/layout/_layout.swig在 &lt; /body&gt;之前添加代码 1234&#123;% if theme.canvas_nest %&#125;&lt;script type=&quot;text/javascript&quot;color=&quot;0,0,0&quot; opacity=&apos;0.5&apos; zIndex=&quot;-2&quot; count=&quot;50&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125; 配置项说明 color ：线条颜色, 默认: &#39;0,0,0&#39;；三个数字分别为(R,G,B) opacity: 线条透明度（0~1）, 默认: 0.5 count: 线条的总数量, 默认: 150 zIndex: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1 2 直接展开文章全部目录搜索打开这个文件：sidebar-toc.styl 把下面的内容注释掉： 1234567//取消逐渐展开，改为直接展开所有TOC//.post-toc .nav .nav-child &#123; display: none; &#125;.post-toc .nav .active &gt; .nav-child &#123; display: block; &#125;.post-toc .nav .active-current &gt; .nav-child &#123; display: block; &amp; &gt; .nav-item &#123; display: block; &#125;&#125; 3 添加文章结束标记在 next\layout\_macro\post.swig 中wechat-subscriber.swig 上面加入如下代码： 1234&lt;!-- 添加文章结束标记 --&gt;&#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #000;font-size:14px;&quot;&gt;----------------- The End -----------------&lt;/div&gt;&#123;% endif %&#125; 二、操作 篇1 Hexo命令 安装主题：用git clone到themes文件夹中 生成静态文件：hexo g 启动本地服务器：hexo s 发布到远程网站：hexo d （hexo d -g 生成的后自动发布） ​ 创建文章：hexo new “标题” （默认就在“post”目录里） 创建草稿：hexo new draft “标题” 把草稿转到“post”目录：hexo publish “标题” ​ （注：中间的命令可以用哦个首字母简写） 2 修改Hexo生成文件模版可在根目录 scaffolds 文件夹下修改3类文章模版 3 添加创建文件后，用atom自动打开脚本在根目录下新建 scripts 文件夹，里面新建 js 文件 名字随意，代码如下： 12345var exec = require("child_process").exec;hexo.on("new", function(data) &#123; exec("atom.exe " + [data.path]);&#125;); 以后每次执行 hexo n 新建文件后都会自动运行 Typora 打开编辑]]></content>
      <categories>
        <category>Hexo Blog Building</category>
      </categories>
  </entry>
</search>
